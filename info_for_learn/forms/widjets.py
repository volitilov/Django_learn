# Функциональность элементов управления, или, в терминологии Django, 
# виджетов (widgets), реализуется особыми классами, объявленными в 
# модуле django.forms.

# Указать для поля формы элемент управления мы можем либо в свойстве 
# widgets вложенного класса Meta, либо в параметре widget конструктора 
# класса поля.
    # Свойство widgets вложенного класса меtа должно принимать в 
    # качестве значе­ния словарь, ключами элементов которого станут 
    # имена полей, а значениями - имена классов элементов управления:
    class GoodForm(forms.ModelForm):
        class Meta:
            model = Good
            widgets = {"description": forms.Textarea, 
                        "category": forms.RadioSelect}
    
    # Параметр widget конструктора класса поля должен принимать как 
    # значение класс элемента управления:
    class GoodForm(forms.ModelForm):
        class Meta:
            model = Good
            description = forms.CharField(widget = forms.Textarea)
            category = forms.ModelChoiceField(queryset = Category.objects.all(), 
                        widget = forms.RadieSelect)
    # Здесь мы задаем для поля description в качестве элемента 
    # управления область редактирования, а для поля category - набор 
    # переключателей.


# Классы элементов управления :::::::::::::::::::::::::::::::::::::::

: Класс элемента : Описание                               : Класс поля
# ------------------------------------------------------------------------
# CheckboxInput  : Флажок                                 : BooleanField
# ------------------------------------------------------------------------
# DateInput      : Поле для ввода даты                    : DateField
# ------------------------------------------------------------------------
# DateTimeInput  : Поле для ввода значения даты и времени : DiiteTimeField
# ------------------------------------------------------------------------
# EmailInput     : Поле для ввода адреса электронной      : EmailField 
#                : почты                                  :
# ------------------------------------------------------------------------
# HiddenInput    : Скрытое поле. Используется для         :
#                : служебных целей                        :
# ------------------------------------------------------------------------
# NumberInput    : Поле для ввода числа                   : FloatField,
#                                                         : IntegerField
# ------------------------------------------------------------------------
# PasswordInput  : Поле для ввода пароля                  :
# ------------------------------------------------------------------------
# RadioSelect    : Набор переключателей                   :
# ------------------------------------------------------------------------
# Select         : Список                                 : ChoiceField,
#                                                         : ModelChoiceField
# ------------------------------------------------------------------------
# Textarea       : Область редактирования                 :
# ------------------------------------------------------------------------
# TextInput      : Обычное поле ввода                     : CharField,
#                                                         : IPAddressField,
#                                                         : GenericIPAddressField,
#                                                         : SlugField
# ------------------------------------------------------------------------
# TimeInput      : Поле для ввода времени                 : TimeField
# ------------------------------------------------------------------------
# URLInput       : Поле для ввода интернет-адреса         : URLField
# ------------------------------------------------------------------------

# Мы можем указать для элемента управления дополнительные характеристики. 
# Они задаются в виде именованных параметров в круглых скобках после имени 
# класса элемента управления. Если параметров нет, круглые скобки ставить 
# не нужно.

# Параметры элементов управления и классы :::::::::::::::::::::::::::::::::

: Параметр       : Описание                                : Класс элемента
# -------------------------------------------------------------------------
# attrs          : Атрибуты формирующего элемент НТМL-тега.: Все
#                : Указываются в виде словаря, ключи       :
#                : элементов которого совпадают с именами  :
#                : атрибутов, а значения этих элементов    :
#                : станут значениями соответствующих       :
#                : атрибутов                               :
# -------------------------------------------------------------------------
# render_value·  : Имеет смысл лишь при повторном выводе   : PasswordInput
#                : формы на экран в результате ввода       :
#                : ошибочных данных. Если True, введенное  :
#                : ранее значение будет присутствовать в   :
#                : элементе управления. Значение по        :
#                : умолчанию - False                       :
# -------------------------------------------------------------------------
# format         : Формат для вывода изначального значения : DateInput,
#                : данного элемента управления. Для        : DateTimeInput,
#                : задания формата применяются символы     : TimeInput
#                : литералов, перед которыми в этом случае :
#                : ставится символ процента(%)             :
# -------------------------------------------------------------------------

Вот пример:
class GoodForm(forms.ModelForm):
    class Meta:
        widgets = {"description": forms.Textarea(attrs={"rows": 80, "cols": 10})}
