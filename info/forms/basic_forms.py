from django.views.generic.edit import (
    CreateView, DeleteView, UpdateView )

# Эти классы объявленные в модуле django.views.generic.edit 
# предназначенны, соответственно, для добавления, правки и 
# удаления записей. Они поддерживают все свойства и методы, 
# унаследованные от класса SingleObjectMixin, и свойство 
# template_name, унаследованное от класса TemplateResponseMixin

# Кроме того, классы createView и UpdateView поддерживают еще 
# несколько полез­ных свойств, а класс DeleteView поддерживает 
# лишь свойство success_url.

# Свойства классов CreateViewu UpdateView :::::::::::::::::::::::::

fields 
# Список имен полей модели, которые должны присутствовать в выводимой 
# на экран форме. Если не указан, будут выведены все поля модели

initial 
# Словарь, задающий изначальные данные для подстановки в 
# соответствующие элементы управления в формах. Ключи элементов 
# словаря задают имена полей, а значения и станут этими изначальными 
# данными

success_url 
# Интернет-адрес, на который будет выполнено перенаправление после 
# успешного добавления или правки записи

class GoodCreate(CreateView):
    model = Good
    template_name = "good_add.html"
    success_url = "/"
# Здесь мы создаем класс-потомок GoodCreate, предназначенный для 
# добавления но­вого товара. После успешного добавления товара 
# будет выполнен возврат на стра­ницу списка товаров.


# В формировании интернет-адреса нам поможет функция reverse, 
# объявленная в модуле django.core.urlresolvers. Она выполняет ту же 
# задачу, что и тег шаб­лона url. Она также может принимать следующие 
# именованные необязательные параметры:
    args 
    # задает в виде обычного списка Python параметры, которые будут 
    # под­ ставлены в интернет-адрес на место неименованных групп 
    # регулярных выраже­ний. Эrи параметры должны указываться в списке 
    # в том порядке, в каком в коде привязки были перечислены 
    # соответствующие группы;

    kwargs
    # задает в виде словаря Python параметры, что будут подставлены в 
    # ин­тернет-адрес на место именованных групп регулярных выражений. 
    # Ключи этих параметров должны соответствовать именам групп.

# Вот пример использования функции reverse:

self.success_url = reverse("index", 
    kwargs=("cat_id": Category.objects.get(pk=self.kwargs["cat_id"]).id))
# Разумеется, мы можем указать имя привязки в качестве значения 
# свойства success_url и непосредственно в классе. Однако в этом 
# случае следует исполь­зовать функцию reverse_lazy, объявленную в 
# том же модуле django.core.urlresolvers.
