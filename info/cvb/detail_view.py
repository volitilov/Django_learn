# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
from django.views.generic.detail import DetailView

DetailView 
# наилучшим образом подходит для вывода подробных сведений о какой-либо 
# пози­ции - например, о товаре. Он также является потомком класса 
# TemplateView и, посравнению с ним, может:
    # извлечь из интернет-адреса параметр - идентификатор выводимой 
    # позиции;

    # выбрать из модели соответствующую ему запись;
    
    # создать в контексте данных шаблона переменную, которая будет 
    # хранить эту запись.

# Свойства класса DetailView :::::::::::::::::::::::::

model 
# Класс модели, из которой будет выбрана запись для вывода

queryset 
# Список.записей, из которого будет выбрана запись для вывода, в виде 
# объекта класса QuerySet. Значение этого свойства имеет приоритет 
# перед значением свойства model

context_object_name
# Имя переменной контекста данных, в которой будет храниться выбранная 
# запись. Если не указано, будет создана переменная object

pk_url_kwarg 
# Строка с именем параметра, которым передается идентификатор записи. 
# Значение по умолчанию - pk

slug_field 
# Строка с именем поля модели, в котором хранится короткий заголовок 
# или название, применяемый в SЕО-дружественных интернет-адресах 
# (обычно оно имеет тип SlugField). Если не указан, будет использовано 
# поле модели с именем slug

slug_url_kwarg 
# Строка с именем параметра, которым передается короткий заголовок 
# или название. Значение по умолчанию - slug


# Сначала класс-контроллер проверяет, был ли ему передан параметр с 
# именем, за­данным в свойстве slug_url_kwarg, и, если он был передан, 
# найдет запись, в которой значение поля, чье имя указано свойством 
# slug_field, совпадает со значением этого параметра. Если же такого 
# параметра нет, контроллер получит значение па­раметра с именем, 
# заданным свойством pk_url_kwarg, и будет искать запись с 
# иден­тификатором, совпадающим с этим значением:

class GoodDetailView(DetailView):
    template_name = "good.html"
    model = Good
    pk_url_kwarg = "good_id"

get_queryset 
# возвращает список записей, из которых будет выбираться нужная. Мы 
# можем переопределить этот метод в классе­ потомке, если нам 
# требуется выполнять с этим списком какие-либо дополнитель­ные 
# действия.

get_object 
# возвращает выбранную из списка запись. Мы можем передать в качестве 
# необязательного параметра queryset набор записей, из которого будет 
# выбираться запись, вместо указанного в свойствах model или queryset. 
# Если мы хо­тим выбирать запись согласно более сложному критерию, 
# нежели идентификатор или короткий заголовок, мы переопределим этот 
# метод в потомке.

get_context_data 
# формирует в контексте данных шаблона следующие пере­менные:
    # переменная, хранящая выбранную запись. Ее имя задается в 
    # свойстве context_object_name (по умолчанию- object);
    # <имя класса модели, набранное прописными буквами> - то же самое, 
    # что предыдущая.