# Подробнее
# https://djbook.ru/rel1.9/ref/models/fields.html#manytomanyfield

ManyToManyField
# Связь многие-ко-многим. Принимает позиционный аргумент: класс 
# связанной модели. Работает так же как и ForeignKey, включая 
# рекурсивную и ленивую связь.
    related_name, related_query_name, limit_choices_to, 
    #Аналогично ForeignKey.related_query_name.

    symmetrical
    # Используется только при рекурсивной связи. Например, есть 
    # модель:
    class Person(models.Model):
        friends = models.ManyToManyField("self")
    # Загружая эту модель Django определяет, что она содержит 
    # ManyToManyField указывающее на себя, и не добавляет атрибут 
    # person_set классу модели Person. Вместо этого подразумевается,
    # что :class:`ManyToManyField`симметрично – то есть, если я твой 
    # друг, то и ты мне друг.Если вам не нужна симметричность для 
    # связи многое-ко-многим к self, установите symmetrical в False. 
    # Это заставит Django добавить дескриптор для обратной связи, 
    # позволяя ManyToManyField быть не симметричным.

    through
    # Django автоматически создает промежуточную таблицу для хранения 
    # связи. Однако, если вы хотите самостоятельно определить 
    # промежуточную таблицу, используйте параметр through указав модель 
    # Django, которая будет хранить связь между моделями.Обычно 
    # используют для хранения дополнительных данных.

    through_fields
    # Используется, если явно указана промежуточная модель для связи 
    # многое-ко-многим. Обычно Django самостоятельно определяется 
    # какие поля использовать для создания связи.


