# Регулярные выражения
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Регулярное выражение - это правило, задающее критерии 
# поиска нужного фраг­мента в исходной строке и, возможно, 
# манипуляции с найденным фрагментом. Оно включает собственно 
# искомые символы и некоторые знаки и их последовательно­сти, 
# имеющие специальное значение и называемые литералами. Литералы 
# регу­лярных выражений либо обозначают какое-либо подмножество 
# искомых символов, либо действие, которое нужно вьшолнить 
# над соседними указанными в выражении символами.

.
# Любой символ

\w 
# Буква, цифра или подчеркивание

\W 
# Не буква, не цифра и не подчеркивание

\d 
# Цифра

\D
# Не цифра

\s 
# Пробельный символ (пробел, табуляция, возврат каретки или 
# перевод строки)

\S
# Не пробельный символ

\b
# Начало или конец слова

\В 
# Не начало и не конец слова

^ и \А 
# Начало строки

$ и \Z 
# Конец строки

[<набор>] 
# Любой символ из набора

<A>|<B> 
# Либо символ А, либо символ В

*
# Предыдущий символ может присутствовать произвольное 
# количество раз, а может и не присутствовать вообще

+ 
# Предыдущий символ должен присутствовать в строке как 
# минимум один раз

? 
# Предыдущий символ должен либо не присутствовать в строке, 
# либо присутствовать один раз

{<n>} 
# Предыдущий символ должен присутствовать в строке строго 
# n раз

{<m>,<n>} 
# Предыдущий символ должен присутствовать в строке от 
# m до n раз


# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Если нам потребуется найти в строке символ, совпадающий с 
# литералом, мы вклю­чим его в регулярное выражение, предварив 
# обратным слешем (\). Например, регу­лярное выражение \? 
# найдет все символы вопросительного знака.
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


# ::::::::::::::::::::::::::::::::::::::::::::::::::::::
# В регулярных выражениях мы можем создавать группы символов. 
# Они обрабаты­ваются как единое целое, а совпадающие с ними 
# фрагменты строки впоследствии могут быть извлечены для 
# обработки. 

# Форматы описание групп

(<подстрока>) 
# Обычная группа, которая должна совпадать с параметром
# подстрока. Совпадающая с этой группой подстрока может быть
# извлечена обращением по порядковому номеру группы

(Р<<имя>><подстрока>) 
# Обычная группа, но совпадающее значение может быть извлечено 
# путем обращения к имени группы

(?Р=<имя>) 
# Задает последовательность, совпадающую со значением группы 
# с указанным параметром имя

(?=<подстрока>) 
# Группа, чьим значением станет фрагмент, за которым следует 
# подстрока

(?!<подстрока>) 
# Группа, чьим значением станет фрагмент, за которым не 
# следует подстрока

(?<=<подстрока>) 
# Группа, чьим значением станет фрагмент, перед которым следует 
# подстрока

(?<!<подстрока>) 
# Группа, чьим значением станет фрагмент, перед которым не 
# следует подстрока

(?:<подстрока>) 
# Совпадающее с этой группой значение не может быть извлечено. 
# Применяется лишь для формирования подстроки и обрабатывается 
# быстрее обычных групп




re = r"id=(\d+)"